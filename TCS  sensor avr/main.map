Archive member included to satisfy reference by file (symbol)

/usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
                              main.o (__udivmodhi4)
/usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
                              /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o (exit)
/usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

colour              0x1               main.o
million             0x2               main.o
result_left         0x2               main.o
result3             0x2               main.o
temp                0x2               main.o
result1             0x2               main.o
result2             0x2               main.o
tens                0x2               main.o
result_right        0x2               main.o
prev_colour         0x1               main.o
result              0x2               main.o
hundred             0x2               main.o
unit                0x2               main.o
thousand            0x2               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000100000 xr
data             0x0000000000800200 0x000000000000fe00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
LOAD main.o
LOAD /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/libm.a
START GROUP
LOAD /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a
LOAD /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/libm.a
LOAD /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/libc.a
LOAD /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/libatmega2560.a
END GROUP
                0x0000000000100000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x100000
                0x000000000000fe00                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xfe00
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x660
 *(.vectors)
 .vectors       0x0000000000000000       0xe4 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000000000000e4                . = ALIGN (0x2)
                0x00000000000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000e4        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000e4                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x00000000000000e4                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000e4                __ctors_start = .
 *(.ctors)
                0x00000000000000e4                __ctors_end = .
                0x00000000000000e4                __dtors_start = .
 *(.dtors)
                0x00000000000000e4                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000e4        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
                0x00000000000000e4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000e4       0x10 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000f4       0x10 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
                0x00000000000000f4                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000104        0x8 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
 *(.init9)
 *(.text)
 .text          0x000000000000010c        0x4 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
                0x000000000000010c                __vector_42
                0x000000000000010c                __vector_22
                0x000000000000010c                __vector_28
                0x000000000000010c                __vector_1
                0x000000000000010c                __vector_32
                0x000000000000010c                __vector_34
                0x000000000000010c                __vector_24
                0x000000000000010c                __vector_12
                0x000000000000010c                __vector_55
                0x000000000000010c                __vector_46
                0x000000000000010c                __bad_interrupt
                0x000000000000010c                __vector_6
                0x000000000000010c                __vector_31
                0x000000000000010c                __vector_35
                0x000000000000010c                __vector_39
                0x000000000000010c                __vector_3
                0x000000000000010c                __vector_23
                0x000000000000010c                __vector_30
                0x000000000000010c                __vector_45
                0x000000000000010c                __vector_25
                0x000000000000010c                __vector_11
                0x000000000000010c                __vector_54
                0x000000000000010c                __vector_13
                0x000000000000010c                __vector_17
                0x000000000000010c                __vector_19
                0x000000000000010c                __vector_56
                0x000000000000010c                __vector_7
                0x000000000000010c                __vector_49
                0x000000000000010c                __vector_41
                0x000000000000010c                __vector_43
                0x000000000000010c                __vector_27
                0x000000000000010c                __vector_5
                0x000000000000010c                __vector_33
                0x000000000000010c                __vector_47
                0x000000000000010c                __vector_52
                0x000000000000010c                __vector_37
                0x000000000000010c                __vector_4
                0x000000000000010c                __vector_44
                0x000000000000010c                __vector_51
                0x000000000000010c                __vector_9
                0x000000000000010c                __vector_2
                0x000000000000010c                __vector_21
                0x000000000000010c                __vector_15
                0x000000000000010c                __vector_36
                0x000000000000010c                __vector_29
                0x000000000000010c                __vector_40
                0x000000000000010c                __vector_8
                0x000000000000010c                __vector_26
                0x000000000000010c                __vector_48
                0x000000000000010c                __vector_14
                0x000000000000010c                __vector_53
                0x000000000000010c                __vector_10
                0x000000000000010c                __vector_50
                0x000000000000010c                __vector_16
                0x000000000000010c                __vector_18
                0x000000000000010c                __vector_20
                0x000000000000010c                __vector_38
 .text          0x0000000000000110      0x374 main.o
                0x0000000000000110                lcd_port_config
                0x000000000000012a                lcd_set_4bit
                0x00000000000001b8                lcd_wr_command
                0x0000000000000202                lcd_init
                0x0000000000000230                lcd_wr_char
                0x000000000000027a                lcd_home
                0x0000000000000280                lcd_string
                0x0000000000000298                lcd_cursor
                0x00000000000002c0                lcd_print
                0x00000000000003d0                timer5_init
                0x00000000000003e8                timer5_reset
                0x00000000000003fa                tcs_init
                0x0000000000000408                tcs_sensor_value
 .text          0x0000000000000484        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000484        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .text          0x0000000000000484        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
                0x0000000000000484                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000484      0x1b0 main.o
                0x0000000000000484                main
 .text.libgcc.mul
                0x0000000000000634        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000634       0x28 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
                0x0000000000000634                __udivmodhi4
 .text.libgcc   0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
                0x000000000000065c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000065c        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
                0x000000000000065c                exit
                0x000000000000065c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000065c        0x4 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000000660                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000000660                _etext = .

.data           0x0000000000800200        0x0 load address 0x0000000000000660
                [!provide]                        PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
 .data          0x0000000000800200        0x0 main.o
 .data          0x0000000000800200        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800200        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .data          0x0000000000800200        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800200                . = ALIGN (0x2)
                0x0000000000800200                _edata = .
                [!provide]                        PROVIDE (__data_end = .)

.bss            0x0000000000800200       0x1a
                0x0000000000800200                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800200        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
 .bss           0x0000000000800200        0x0 main.o
 .bss           0x0000000000800200        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800200        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .bss           0x0000000000800200        0x0 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800200       0x1a main.o
                0x0000000000800200                colour
                0x0000000000800201                million
                0x0000000000800203                result_left
                0x0000000000800205                result3
                0x0000000000800207                temp
                0x0000000000800209                result1
                0x000000000080020b                result2
                0x000000000080020d                tens
                0x000000000080020f                result_right
                0x0000000000800211                prev_colour
                0x0000000000800212                result
                0x0000000000800214                hundred
                0x0000000000800216                unit
                0x0000000000800218                thousand
                0x000000000080021a                PROVIDE (__bss_end = .)
                0x0000000000000660                __data_load_start = LOADADDR (.data)
                0x0000000000000660                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080021a        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x000000000080021a                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x88
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 main.o
 .debug_aranges
                0x0000000000000028       0x20 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .debug_aranges
                0x0000000000000048       0x20 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .debug_aranges
                0x0000000000000068       0x20 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x1761
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0xbbc /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
 .debug_info    0x0000000000000bbc      0xb33 main.o
 .debug_info    0x00000000000016ef       0x26 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .debug_info    0x0000000000001715       0x26 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .debug_info    0x000000000000173b       0x26 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)

.debug_abbrev   0x0000000000000000      0xd68
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0xb1a /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
 .debug_abbrev  0x0000000000000b1a      0x212 main.o
 .debug_abbrev  0x0000000000000d2c       0x14 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .debug_abbrev  0x0000000000000d40       0x14 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .debug_abbrev  0x0000000000000d54       0x14 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)

.debug_line     0x0000000000000000     0x1309
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
 .debug_line    0x000000000000001d     0x1139 main.o
 .debug_line    0x0000000000001156       0xcd /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .debug_line    0x0000000000001223       0x61 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .debug_line    0x0000000000001284       0x85 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)

.debug_frame    0x0000000000000000      0x118
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x118 main.o

.debug_str      0x0000000000000000      0x6ee
 *(.debug_str)
 .debug_str     0x0000000000000000      0x3e6 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
 .debug_str     0x00000000000003e6      0x286 main.o
                                        0x2cc (size before relaxing)
 .debug_str     0x000000000000066c       0x82 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
 .debug_str     0x00000000000006ee       0x82 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
 .debug_str     0x00000000000006ee       0x82 /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)

.debug_loc      0x0000000000000000      0x95b
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x95b main.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x18
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 main.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__bss_end                                         /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
__do_clear_bss                                    /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_clear_bss.o)
                                                  main.o
__heap_end                                        /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__init                                            /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__stack                                           /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__udivmodhi4                                      /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_udivmodhi4.o)
                                                  main.o
__vector_1                                        /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_10                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_11                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_12                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_13                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_14                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_15                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_16                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_17                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_18                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_19                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_2                                        /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_20                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_21                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_22                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_23                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_24                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_25                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_26                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_27                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_28                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_29                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_3                                        /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_30                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_31                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_32                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_33                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_34                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_35                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_36                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_37                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_38                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_39                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_4                                        /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_40                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_41                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_42                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_43                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_44                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_45                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_46                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_47                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_48                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_49                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_5                                        /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_50                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_51                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_52                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_53                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_54                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_55                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_56                                       /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_6                                        /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_7                                        /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_8                                        /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_9                                        /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vector_default                                  /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
__vectors                                         /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
_exit                                             /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
colour                                            main.o
exit                                              /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/avr6/libgcc.a(_exit.o)
                                                  /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
hundred                                           main.o
lcd_cursor                                        main.o
lcd_home                                          main.o
lcd_init                                          main.o
lcd_port_config                                   main.o
lcd_print                                         main.o
lcd_set_4bit                                      main.o
lcd_string                                        main.o
lcd_wr_char                                       main.o
lcd_wr_command                                    main.o
main                                              main.o
                                                  /usr/local/Cellar/avr-gcc/8.2.0/lib/avr-gcc/8/gcc/avr/8.2.0/../../../../../../avr/lib/avr6/crtatmega2560.o
million                                           main.o
prev_colour                                       main.o
result                                            main.o
result1                                           main.o
result2                                           main.o
result3                                           main.o
result_left                                       main.o
result_right                                      main.o
tcs_init                                          main.o
tcs_sensor_value                                  main.o
temp                                              main.o
tens                                              main.o
thousand                                          main.o
timer5_init                                       main.o
timer5_reset                                      main.o
unit                                              main.o
